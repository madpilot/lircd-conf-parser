{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,SAAS,GAAG;AAChB,aAAW,EAAE,CAAC;AACd,cAAY,EAAE,CAAC;AACf,aAAW,EAAE,CAAC;CACf,CAAA;;IAEoB,SAAS;AAC5B,WADmB,SAAS,CAChB,MAAM,EAAE;0BADD,SAAS;;AAE1B,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC;GACpC;;eAJkB,SAAS;;gCAShB,MAAM,EAAE;AAClB,aAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KACnC;;;mCAEc,MAAM,EAAE;AACrB,aAAO,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;KACnC;;;kCAEa,IAAI,EAAE;AAClB,aAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC;KAChD;;;gCAEW,IAAI,EAAE;AAChB,aAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,IAAI,CAAC;KAC9C;;;4BAEO;;;AACN,UAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAErC,UAAI,MAAM,GAAG;AACX,eAAO,EAAE,EAAE;OACZ,CAAC;AACF,YAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AACnC,YAAG,MAAK,aAAa,CAAC,IAAI,CAAC,EAAE;AAC3B,gBAAK,KAAK,IAAI,SAAS,CAAC,MAAM,CAAC;SAChC,MAAM,IAAG,MAAK,KAAK,IAAI,SAAS,CAAC,MAAM,IAAI,MAAK,WAAW,CAAC,IAAI,CAAC,EAAE;AAClE,gBAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACxB,gBAAK,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC;SAC/B;OACF,CAAC,CAAC;;AAEH,UAAG,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE;AACjC,cAAM,OAAO,CAAE;OAChB;;AAED,aAAO,MAAM,CAAC;KACf;;;4BAxCc,EACd;;;SAPkB,SAAS;;;kBAAT,SAAS","file":"index.js","sourcesContent":["const constants = {\n  STATE_START: 0,\n  STATE_REMOTE: 1,\n  STATE_CODES: 2\n}\n\nexport default class LircdConf {\n  constructor(config) {\n    this.config = config;\n    this.state = constants.STATE_START;\n  }\n\n  static parse() {\n  }\n\n  convertTabs(string) {\n    return string.replace(/\\t/g, ' ');\n  }\n\n  removeComments(string) {\n    return string.replace(/#.+/g, '');\n  }\n\n  isBeginRemote(line) {\n    return line.match(/begin \\s*remote/i) !== null;\n  }\n\n  isEndRemote(line) {\n    return line.match(/end \\s*remote/i) !== null;\n  }\n\n  parse() {\n    let config = this.convertTabs(this.config);\n    config = this.removeComments(config);\n\n    let result = {\n      remotes: []\n    };\n    config.split(\"\\n\").forEach((line) => {\n      if(this.isBeginRemote(line)) {\n        this.state == constants.REMOTE;\n      } else if(this.state == constants.REMOTE && this.isEndRemote(line)) {\n        result.remotes.push({});\n        this.state == constants.START;\n      }\n    });\n\n    if(this.state !== constants.START) {\n      throw(\"Error\");\n    }\n\n    return result;\n  }\n}\n"]}